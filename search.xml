<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[My Gallery]]></title>
    <url>%2F2019%2F09%2F11%2FMy-Gallery%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[动态规划学习]]></title>
    <url>%2F2019%2F09%2F11%2F%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[DP（又称动态规划） 学了两年都没学明白,为了最后半年的区域赛,系统的学一下,更好的准备接下来的比赛. 动态规划部分简介动态规划应用于子问题重叠的情况： 要去刻画最有界的结构特征; 尝试递归地定义最优解的值(就是我们常说的考虑从$i-1$到$i$) 计算最优值 利用计算出的信息构造一个最优解 经典例题给定一段钢条，和不同长度的价格，问如何切割使得总价格最大。 为了求解规模为$n$的原问题，我们先求解形式完全一样，但规模更小的子问题。 即当完成首次切割后，我们将两段钢条看成两个独立的钢条切割问题实例。 我们通过组合相关子问题的最优解，并在所有可能的两段切割方案中选取组合收益最大者，构成原问题的最优解。 最优子结构： 问题的最优解由相关自问题的最优解组合而成动态规划的两种实现方法： 带备忘的自定向下法（记忆化搜索）; 自底向上法（将子问题按照规模排序，类似于递推）。算导用子问题图上按照逆拓扑排序求解子问题，引出记忆化搜索。重构解（输出方案）： 转移的时候记录最优子结构的位置。 矩阵链乘法给出$n$个矩阵的序列，希望计算他们的乘积，问最少需要多少次乘法运算？（认为$p \times q $的矩阵与$q \times r$的矩阵相乘的代价是$p \times q \times r$）完全括号化方案是指要给出谁先和谁乘。 动态规划原理两个要素： 最优子结构具有最优子结构也可能是适合用贪心的方法求解。注意要确保我们考察了解最优解中用到的所有子问题。 证明问题最优解的第一个组成部分是作出一个选择; 对于一个给定问题，在其可能的第一步选择中，你界定已经知道那种选择才会得到最优解。你现在并不关心这种选择具体是如何得道的，只是假定已经知道了这种选择; 定可获得的最优解的选择后，确定这次选择会产生哪些子问题，以及如何最好地刻画子问题空间； 证明作为构成原问题最优解的组成部分，每个子问题的解就是它本身的最优解。方法是反证法，考虑加入某个子问题的解不是其自身的最优解，那么就可以从原问题的解中用该子问题的最优解替换掉当前的非最优解，从而得到原问题的一个更优的解，从而与原问题最优解的假设矛盾。要保持子问题空间尽量简单，只在必要时扩展。 后续待定$\ldots$]]></content>
      <categories>
        <category>DP</category>
        <category>kuangbin</category>
        <category>OI wiki</category>
      </categories>
      <tags>
        <tag>DP 记忆化搜索</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二维数组]]></title>
    <url>%2F2019%2F09%2F06%2F%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[新的开始，重新出发……]]></title>
    <url>%2F2019%2F09%2F05%2F%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%8C%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91%E2%80%A6%E2%80%A6%2F</url>
    <content type="text"><![CDATA[重新开始三年 三年了,从来天津那天到现在整整两年，想起两年前,那两个怀揣这梦想的男孩带着两个行李箱远离家乡,北漂,哈哈哈,来这里两年了,发生了很多事,学会了很多东西,有知识,有做人做事.慢慢的,和朋友越走越远,当初一起北漂的朋友走散了,再也找不回当初的感觉了. 大学撰写一下自己的大学时光,最美好的青春,高中我们朦朦懂懂,大学我们情窦初开,到了大学才发现与自己想象的大学生活与众不同,每天都有课,即使没有课,也会有其他的一些琐碎事.每天混混顿顿,就像是混子,后来进去了ACM,这个东西难,但是确是有意思,但是它却不是一个大众的游戏,它是属于强者的游戏.两年,学了两年虽然没有惊天动地的成就.但是,它带给我的是和队友打比赛时的欢乐,做不出来题时的慌张,它给我的大学时光带来了挑战,人生活着不就是为了挑战么?有时候会特别后悔,如果我没有打ACM,那么我可能会去保研,参加其他的比赛,虽然那些也很有意思,但是相比之下,还是ACM更有吸引力.]]></content>
      <categories>
        <category>杂文 感言 flag</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F09%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
